<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="113725" started-at="2020-04-19T09:56:19 IST" finished-at="2020-04-19T09:58:13 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="113725" started-at="2020-04-19T09:56:19 IST" finished-at="2020-04-19T09:58:13 IST">
      <class name="tests.IFramePracticeTest">
        <test-method status="PASS" signature="suiteSetup()[pri:0, instance:tests.IFramePracticeTest@51f116b8]" name="suiteSetup" is-config="true" duration-ms="71129" started-at="2020-04-19T09:55:08 IST" finished-at="2020-04-19T09:56:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suiteSetup -->
        <test-method status="PASS" signature="testSetup(org.testng.ITestContext)[pri:0, instance:tests.IFramePracticeTest@51f116b8]" name="testSetup" is-config="true" duration-ms="16980" started-at="2020-04-19T09:56:19 IST" finished-at="2020-04-19T09:56:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@188ac8a3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetup -->
        <test-method status="PASS" signature="methodSetup(org.testng.ITestResult)[pri:0, instance:tests.IFramePracticeTest@51f116b8]" name="methodSetup" is-config="true" duration-ms="22415" started-at="2020-04-19T09:56:36 IST" finished-at="2020-04-19T09:56:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=IFramePracticeTest.iframePracticeTest()[pri:0, instance:tests.IFramePracticeTest@51f116b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method status="FAIL" signature="iframePracticeTest()[pri:0, instance:tests.IFramePracticeTest@51f116b8]" name="iframePracticeTest" duration-ms="44741" started-at="2020-04-19T09:56:58 IST" finished-at="2020-04-19T09:57:43 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertFalse(Assert.java:65)
at org.testng.Assert.assertFalse(Assert.java:75)
at tests.IFramePracticeTest.iframePracticeTest(IFramePracticeTest.java:17)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iframePracticeTest -->
        <test-method status="PASS" signature="methodTeardown(org.testng.ITestResult)[pri:0, instance:tests.IFramePracticeTest@51f116b8]" name="methodTeardown" is-config="true" duration-ms="28601" started-at="2020-04-19T09:57:43 IST" finished-at="2020-04-19T09:58:12 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=iframePracticeTest status=FAILURE method=IFramePracticeTest.iframePracticeTest()[pri:0, instance:tests.IFramePracticeTest@51f116b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTeardown -->
        <test-method status="PASS" signature="testTeardown()[pri:0, instance:tests.IFramePracticeTest@51f116b8]" name="testTeardown" is-config="true" duration-ms="918" started-at="2020-04-19T09:58:12 IST" finished-at="2020-04-19T09:58:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTeardown -->
        <test-method status="PASS" signature="suiteTeardown()[pri:0, instance:tests.IFramePracticeTest@51f116b8]" name="suiteTeardown" is-config="true" duration-ms="572" started-at="2020-04-19T09:58:13 IST" finished-at="2020-04-19T09:58:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suiteTeardown -->
      </class> <!-- tests.IFramePracticeTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
